////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) 2008-2014 Quantron Systems LLC.
//  All Rights Reserved.
//
//  This file is part of the B12 project.
//  For conditions of distribution and use,
//  please contact sales@quantron-systems.com
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var _ = require('underscore');
var fs = require('fs');
var dot = require('dot');
var common = require('./common.js');
var logger = require('./logger.js');

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var useCache = true;
var cache = {};
var settings;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function getSettings() {
    if(!settings) {
        settings = _.clone(dot.templateSettings);
        settings.strip = false;
    }
    return settings;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function readTemplate(path) {
    var template = cache[path];
    if(!template) {
        logger.verbose('readTemplate(): reading template file - ' + path);

        var data = fs.readFileSync(path, {encoding: 'utf8'});
        template = dot.template(data, getSettings());

        if(useCache) {
            cache[path] = template;
        }
    }
    return template;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function generateFromString(templateString, templateData) {
    if(templateData === undefined) {
        templateData = {};
    }

    return dot.template(templateString, getSettings())(templateData);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function generateFromFile(templateFileName, templateData) {
    if(templateData === undefined) {
        templateData = {};
    }
    return readTemplate(templateFileName)(templateData);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
module.exports = {
    generateFromFile: generateFromFile,
    generateFromString: generateFromString,
    useCache: useCache
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
